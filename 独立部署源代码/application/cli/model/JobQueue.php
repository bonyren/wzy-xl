<?php
 namespace app\cli\model; use app\cli\controller\Jobs; use think\Log; use think\Model; use app\Defs; class JobQueue extends Model { protected $pk = "\x69\x64"; protected $table = "\152\157\142\137\161\165\x65\x75\x65"; const JOB_STATUS_QUEUED = 1; const JOB_STATUS_RUNNING = 2; const JOB_STATUS_DONE = 3; const JOB_STATUS = array(self::JOB_STATUS_QUEUED => array("\x76\x61\154\165\145" => self::JOB_STATUS_QUEUED, "\154\x61\x62\x65\x6c" => "\346\216\x92\xe9\230\237\xe4\xb8\255", "\143\154\x73" => "\x64\x65\146\141\x75\154\x74"), self::JOB_STATUS_RUNNING => array("\166\141\x6c\165\x65" => self::JOB_STATUS_RUNNING, "\x6c\141\x62\145\x6c" => "\xe8\xbf\x90\350\xa1\214\344\xb8\xad", "\143\x6c\163" => "\163\145\143\157\x6e\144\141\162\x79"), self::JOB_STATUS_DONE => array("\166\x61\154\165\145" => self::JOB_STATUS_DONE, "\154\x61\x62\145\154" => "\345\267\262\345\256\x8c\346\210\x90", "\x63\x6c\163" => "\163\x75\x63\143\145\163\x73")); const JOB_RESULT_PENDING = "\345\276\x85\xe5\256\x9a"; const JOB_RESULT_SUCCESS = "\xe6\210\x90\xe5\212\x9f"; const JOB_RESULT_FAILURE = "\xe5\xa4\xb1\350\264\xa5"; public function getExecuteTimeAttr($value) { goto LBC6_; rW6Wv: return $value; goto qPW0c; i10yO: jtPa3: goto rW6Wv; LBC6_: if (!($value == Defs::DEFAULT_DB_DATETIME_VALUE)) { goto jtPa3; } goto U0v4E; U0v4E: return ''; goto i10yO; qPW0c: } public function getExecuteEndTimeAttr($value) { goto bNnvF; Psz7C: return ''; goto oaeYb; K5BN_: return $value; goto U7z0B; bNnvF: if (!($value == Defs::DEFAULT_DB_DATETIME_VALUE)) { goto c1ZzY; } goto Psz7C; oaeYb: c1ZzY: goto K5BN_; U7z0B: } public function failJob($message = '') { return $this->resolveJob(self::JOB_RESULT_FAILURE, $message); } public function resolveJob($result, $message = '') { goto LJK2O; LJK2O: Log::record("\122\x65\x73\x6f\x6c\x76\x69\156\x67\x20\x6a\x6f\x62\40{$this->id}\40\141\163\x20{$result}\x3a\40{$message}"); goto mtuCB; pbCfA: Scheduler::update(["\x6c\141\x73\x74\x5f\x72\x75\156" => date("\131\55\155\55\144\40\110\x3a\x69\72\163")], ["\x69\144" => $this->scheduler_id]); goto jMZuT; RlwvM: $this->result = $result; goto Gb4zI; b07DJ: $this->save(); goto pbCfA; Gb4zI: $this->execute_end_time = date("\131\x2d\x6d\x2d\x64\x20\110\x3a\x69\x3a\163"); goto b07DJ; mtuCB: $this->status = self::JOB_STATUS_DONE; goto Ahbf6; Ahbf6: $this->message = truncateString($message, 1024); goto RlwvM; jMZuT: return true; goto gMnHw; gMnHw: } public function runJob() { goto pUBNv; gHxiQ: KHwYl: goto lDBed; tSPSn: $func = $this->target; goto ENKqi; lDBed: try { goto Yv6Mm; Yv6Mm: $resultMsg = call_user_func([$jobs, $func]); goto MgGJC; MgGJC: $this->resolveJob(self::JOB_RESULT_SUCCESS, $resultMsg); goto MHgYV; MHgYV: return true; goto kPCNq; kPCNq: } catch (\Exception $e) { $this->failJob($e->getMessage()); return false; } goto MMcWD; HRWiB: return false; goto gHxiQ; dn12T: if (!(false == is_callable([$jobs, $func], false, $callable_name))) { goto KHwYl; } goto U1qoy; ENKqi: $callable_name = null; goto dn12T; pUBNv: $jobs = new Jobs(); goto tSPSn; U1qoy: $this->failJob("\x4e\x6f\x74\x20\103\141\x6c\x6c\141\x62\154\x65\x3a\x20" . $callable_name); goto HRWiB; MMcWD: } }
